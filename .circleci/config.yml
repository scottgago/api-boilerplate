# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:

    working_directory: ~/repo

    steps:
      - checkout

      - setup_remote_docker

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      - run: |
          TAG=0.1.$CIRCLE_BUILD_NUM
          docker build -t   $PROJECT_NAME/$TYPE:$TAG .      # (3)
          docker login -u $DOCKER_USER -p $DOCKER_PASS         # (4)
          docker push $PROJECT_NAME/$TYPE:$TAG

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - deploy:
          name: Deploy to S3 if branch is Prod
          command: |
            if [ "${CIRCLE_BRANCH}" == "prod" ]; then
              aws s3 sync jekyll/_site/docs s3://circle-production-static-site/docs/ --delete
            else
              echo "Not master branch so not deploying"
            fi

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # run tests!
      # - run:
      #     name: run tests
      #     command: |
      #       . venv/bin/activate
      #       python manage.py test

      - store_artifacts:
          path: test-reports
          destination: test-reports
          